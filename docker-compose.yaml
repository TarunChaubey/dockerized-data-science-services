version: '3.8'

services:
  mongo_db:
    image: mongo:${MONGO_VERSION}
    container_name: ${MONGO_CONTAINER_NAME}
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - backend_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    labels:
      - name=mongo

  postgres_db:
    image: ${POSTGRES_IMAGE}:${POSTGRES_IMAGE_TAG}
    container_name: ${POSTGRES_CONTAINER_NAME}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      # - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data # dpgvector/pgvector
      - ${POSTGRES_DATA_PATH}:/postgresql/data # ankane/pgvector
    networks:
      - backend_network
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  redis_db:
    image: redis:${REDIS_VERSION}
    container_name: ${REDIS_CONTAINER_NAME}
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend_network
    command: redis-server --requirepass ${REDIS_PASSWORD}

  opensearch_node:
    image: opensearchproject/opensearch:${OPENSEARCH_VERSION}
    container_name: ${OPENSEARCH_CONTAINER_NAME}
    ports:
      - "${OPENSEARCH_HTTP_PORT}:9200"
      - "${OPENSEARCH_TRANSPORT_PORT}:9300"
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    networks:
      - backend_network
    environment:
      discovery.type: single-node
      bootstrap.memory_lock: "true"
      OPENSEARCH_JAVA_OPTS: ${OPENSEARCH_JAVA_OPTS}
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: ${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
      plugins.security.ssl.http.enabled: "false"
      OPENSEARCH_SECURITY_DISABLED: "false"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

  opensearch_dashboards:
    image: opensearchproject/opensearch-dashboards:${OPENSEARCH_DASHBOARDS_VERSION}
    container_name: ${OPENSEARCH_DASHBOARDS_CONTAINER_NAME}
    ports:
      - "${DASHBOARDS_PORT}:5601"
    networks:
      - backend_network
    depends_on:
      - opensearch_node
    environment:
      server.host: "0.0.0.0"
      server.port: 5601
      OPENSEARCH_HOSTS: "http://${OPENSEARCH_CONTAINER_NAME}:9200"
      server.ssl.enabled: "false"
      opensearch.ssl.verificationMode: "none"
      opensearch_security.cookie.secure: "false"
      OPENSEARCH_USERNAME: ${OPENSEARCH_USERNAME}
      OPENSEARCH_PASSWORD: ${OPENSEARCH_PASSWORD}

  label_studio:
    image: heartexlabs/label-studio:${LABEL_STUDIO}
    container_name: ${LABEL_STUDIO_CONTAINER_NAME}
    ports:
      - "${LABEL_STUDIO_PORT}:8080"
    volumes:
      - label_studio_data:/label-studio/data
    networks:
      - backend_network
    depends_on:
      - postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_CONTAINER_NAME}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB_LS}
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_CONTAINER_NAME}:${POSTGRES_PORT}/${POSTGRES_DB_LS}?sslmode=disable"

networks:
  backend_network:

volumes:
  mongo_data:
    driver: local
    driver_opts:
      type: none
      device: "${MONGO_DATA_PATH}"
      o: bind

  postgres_data:
    driver: local
    driver_opts:
      type: none
      device: "${POSTGRES_DATA_PATH}"
      o: bind

  redis_data:
    driver: local
    driver_opts:
      type: none
      device: "${REDIS_DATA_PATH}"
      o: bind

  opensearch_data:
    driver: local
    driver_opts:
      type: none
      device: "${OPENSEARCH_DATA_PATH}"
      o: bind

  label_studio_data:
    driver: local
    driver_opts:
      type: none
      device: "${LABEL_STUDIO_DATA_PATH}"
      o: bind
