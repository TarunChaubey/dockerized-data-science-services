version: '3.8'

services:
  mongo_db:
    image: mongo:${MONGO_VERSION}
    container_name: ${MONGO_CONTAINER_NAME}
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - backend_network
    labels:
      - name=mongo

  postgres_db:
    image: postgres:${POSTGRES_VERSION}
    container_name: ${POSTGRES_CONTAINER_NAME}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend_network
    labels:
      - name=postgres

  redis_db:
    image: redis:${REDIS_VERSION}
    container_name: ${REDIS_CONTAINER_NAME}
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend_network
    labels:
      - name=redis

  opensearch_node:
    image: opensearchproject/opensearch:${OPENSEARCH_VERSION}
    container_name: ${OPENSEARCH_CONTAINER_NAME}
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - OPENSEARCH_JAVA_OPTS=${OPENSEARCH_JAVA_OPTS}
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
      - plugins.security.ssl.http.enabled=false
      - OPENSEARCH_SECURITY_DISABLED=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    ports:
      - "${OPENSEARCH_HTTP_PORT}:9200"
      - "${OPENSEARCH_TRANSPORT_PORT}:9300"
    networks:
      - backend_network

  opensearch_dashboards:
    image: opensearchproject/opensearch-dashboards:${OPENSEARCH_DASHBOARDS_VERSION}
    container_name: ${OPENSEARCH_DASHBOARDS_CONTAINER_NAME}
    depends_on:
      - opensearch_node
    ports:
      - "${DASHBOARDS_PORT}:5601"
    environment:
      - server.host=0.0.0.0
      - server.port=5601
      - OPENSEARCH_HOSTS=http://${OPENSEARCH_CONTAINER_NAME}:9200
      - server.ssl.enabled=false
      - opensearch.ssl.verificationMode=none
      - opensearch_security.cookie.secure=false
      - OPENSEARCH_USERNAME=${OPENSEARCH_USERNAME}
      - OPENSEARCH_PASSWORD=${OPENSEARCH_PASSWORD}
    networks:
      - backend_network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: ${ZOOKEEPER_CONTAINER_NAME}
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_PORT}
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "${ZOOKEEPER_PORT}:2181"
    networks:
      - backend_network

  kafka:
    image: wurstmeister/kafka:latest
    container_name: ${KAFKA_CONTAINER_NAME}
    depends_on:
      - zookeeper
    ports:
      - "${KAFKA_PORT}:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - backend_network

  authelia:
    image: authelia/authelia:latest
    container_name: ${AUTHELIA_CONTAINER_NAME}
    environment:
      - TZ=${TZ}
      - AUTHELIA_LOG_LEVEL=${AUTHELIA_LOG_LEVEL}
      - AUTHELIA_SERVER_HOST=0.0.0.0
      - AUTHELIA_SERVER_PORT=${AUTHELIA_PORT}
      - AUTHELIA_STORAGE_MYSQL_HOST=${AUTHELIA_DB_HOST}
      - AUTHELIA_STORAGE_MYSQL_PORT=${AUTHELIA_DB_PORT}
      - AUTHELIA_STORAGE_MYSQL_USERNAME=${AUTHELIA_DB_USER}
      - AUTHELIA_STORAGE_MYSQL_PASSWORD=${AUTHELIA_DB_PASS}
      - AUTHELIA_STORAGE_MYSQL_DATABASE=${AUTHELIA_DB_NAME}
      - AUTHELIA_SESSION_SECRET_FILE=/config/session.secret
      - AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE=/config/storage_encryption.key
      - AUTHELIA_JWT_SECRET_FILE=/config/jwt.secret
    volumes:
      - authelia_config:/config
    networks:
      - backend_network

networks:
  backend_network:

volumes:
  mongo_data:
    name: mongo_data
    driver: local
    driver_opts:
      type: none
      device: "${MONGO_DATA_PATH}"
      o: bind

  postgres_data:
    name: postgres_data
    driver: local
    driver_opts:
      type: none
      device: "${POSTGRES_DATA_PATH}"
      o: bind

  redis_data:
    name: redis_data
    driver: local
    driver_opts:
      type: none
      device: "${REDIS_DATA_PATH}"
      o: bind

  opensearch_data:
    name: opensearch_data
    driver: local
    driver_opts:
      type: none
      device: "${OPENSEARCH_DATA_PATH}"
      o: bind

  authelia_config:
    name: authelia_data
    driver: local
    driver_opts:
      type: none
      device: "${AUTHELIA_DATA_PATH}"
      o: bind